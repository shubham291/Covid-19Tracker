{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Documents/WorkSpace/coronatracker/src/components/CountryPicker/CountryPicker.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = props => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, [setFetchedCountries]);\n  console.log(fetchedCountries, 'fetchedCountries');\n  let {\n    handleCountryChange\n  } = props;\n  return /*#__PURE__*/React.createElement(FormControl, {\n    className: styles.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NativeSelect, {\n    defaultValue: \"\",\n    onChange: e => handleCountryChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"Global\"), fetchedCountries.length ? fetchedCountries.map((country, i) => /*#__PURE__*/React.createElement(\"option\", {\n    key: i,\n    value: country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, country)) : null));\n};\n\nexport default CountryPicker;","map":{"version":3,"sources":["/home/shubham/Documents/WorkSpace/coronatracker/src/components/CountryPicker/CountryPicker.jsx"],"names":["React","useState","useEffect","NativeSelect","FormControl","styles","fetchCountries","CountryPicker","props","fetchedCountries","setFetchedCountries","fetchAPI","console","log","handleCountryChange","formControl","e","target","value","length","map","country","i"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAAQC,YAAR,EAAqBC,WAArB,QAAuC,mBAAvC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAAQC,cAAR,QAA6B,WAA7B;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAS;AAC3B,QAAM,CAACC,gBAAD,EAAkBC,mBAAlB,IAAyCT,QAAQ,CAAC,EAAD,CAAvD;AACAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMS,QAAQ,GAAG,YAAU;AACvBD,MAAAA,mBAAmB,CAAC,MAAMJ,cAAc,EAArB,CAAnB;AACH,KAFD;;AAIAK,IAAAA,QAAQ;AACX,GANQ,EAMP,CAACD,mBAAD,CANO,CAAT;AAOAE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,gBAAZ,EAA6B,kBAA7B;AACA,MAAI;AAACK,IAAAA;AAAD,MAAwBN,KAA5B;AACA,sBACI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEH,MAAM,CAACU,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,YAAY,EAAC,EAA3B;AAA8B,IAAA,QAAQ,EAAGC,CAAD,IAAKF,mBAAmB,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAEKT,gBAAgB,CAACU,MAAjB,GAA0BV,gBAAgB,CAACW,GAAjB,CAAqB,CAACC,OAAD,EAASC,CAAT,kBAC5C;AAAQ,IAAA,GAAG,EAAEA,CAAb;AAAgB,IAAA,KAAK,EAAED,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCA,OAAjC,CADuB,CAA1B,GAEE,IAJP,CADJ,CADJ;AAUH,CArBD;;AAuBA,eAAed,aAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport {NativeSelect,FormControl} from '@material-ui/core'\nimport styles from './CountryPicker.module.css'\nimport {fetchCountries} from '../../api'\nconst CountryPicker = (props)=>{\n    const [fetchedCountries,setFetchedCountries] = useState([])\n    useEffect(()=>{\n        const fetchAPI = async ()=>{\n            setFetchedCountries(await fetchCountries())\n        }\n\n        fetchAPI()\n    },[setFetchedCountries])\n    console.log(fetchedCountries,'fetchedCountries')\n    let {handleCountryChange} = props\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue='' onChange={(e)=>handleCountryChange(e.target.value)}>\n            <option value=\"\">Global</option>\n                {fetchedCountries.length ? fetchedCountries.map((country,i)=>\n                    <option key={i} value={country}>{country}</option>\n                ): null}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker"]},"metadata":{},"sourceType":"module"}