{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Documents/WorkSpace/coronatracker/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data,\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, [setDailyData]);\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(item => item.date),\n      datasets: [{\n        data: dailyData.map(item => item.confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(item => item.deaths),\n        label: 'Infected',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255,0,0,0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 29\n    }\n  }) : null;\n  const barChart = data.confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0,0,255,0.5)', 'rgba(0,255,0,0.5)', 'rgba(255,0,0,0.5)'],\n        data: [data.confirmed, data.recovered, data.deaths]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: 'Current State in' + country\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Charts;","map":{"version":3,"sources":["/home/shubham/Documents/WorkSpace/coronatracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","item","date","datasets","confirmed","label","borderColor","fill","deaths","backgroundColor","barChart","recovered","legend","display","title","text","container","Charts"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AACA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACjC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,QAAQ,GAAG,YAAY;AACzBD,MAAAA,YAAY,CAAC,MAAMR,cAAc,EAArB,CAAZ;AACH,KAFD;;AAGAS,IAAAA,QAAQ;AACX,GALQ,EAKN,CAACD,YAAD,CALM,CAAT;AAOA,QAAME,SAAS,GACXH,SAAS,CAACI,MAAV,gBAAoB,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAC5BC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAeC,IAAD,IAAUA,IAAI,CAACC,IAA7B,CADoB;AAE5BC,MAAAA,QAAQ,EAAE,CAAC;AACPX,QAAAA,IAAI,EAAEE,SAAS,CAACM,GAAV,CAAeC,IAAD,IAAUA,IAAI,CAACG,SAA7B,CADC;AAEPC,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,WAAW,EAAE,SAHN;AAIPC,QAAAA,IAAI,EAAE;AAJC,OAAD,EAMP;AACCf,QAAAA,IAAI,EAAEE,SAAS,CAACM,GAAV,CAAeC,IAAD,IAAUA,IAAI,CAACO,MAA7B,CADP;AAECH,QAAAA,KAAK,EAAE,UAFR;AAGCC,QAAAA,WAAW,EAAE,KAHd;AAICG,QAAAA,eAAe,EAAE,mBAJlB;AAKCF,QAAAA,IAAI,EAAE;AALP,OANO;AAFkB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,GAeS,IAhBb;AAmBA,QAAMG,QAAQ,GACVlB,IAAI,CAACY,SAAL,gBACC,oBAAC,GAAD;AACD,IAAA,IAAI,EAAE;AACFL,MAAAA,MAAM,EAAC,CAAC,UAAD,EAAY,WAAZ,EAAwB,QAAxB,CADL;AAEFI,MAAAA,QAAQ,EAAE,CAAC;AACPE,QAAAA,KAAK,EAAC,QADC;AAEPI,QAAAA,eAAe,EAAE,CACb,mBADa,EAEb,mBAFa,EAGb,mBAHa,CAFV;AAOPjB,QAAAA,IAAI,EAAC,CAACA,IAAI,CAACY,SAAN,EAAgBZ,IAAI,CAACmB,SAArB,EAA+BnB,IAAI,CAACgB,MAApC;AAPE,OAAD;AAFR,KADL;AAaD,IAAA,OAAO,EAAE;AACLI,MAAAA,MAAM,EAAE;AAACC,QAAAA,OAAO,EAAC;AAAT,OADH;AAELC,MAAAA,KAAK,EAAC;AAACD,QAAAA,OAAO,EAAC,IAAT;AAAcE,QAAAA,IAAI,EAAE,qBAAqBtB;AAAzC;AAFD,KAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAkBM,IAnBV;AAqBA,sBACI;AAAK,IAAA,SAAS,EAAEH,MAAM,CAAC0B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKvB,OAAO,GAAGiB,QAAH,GAAcb,SAD1B,CADJ;AAKH,CAtDD;;AAwDA,eAAeoB,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { fetchDailyData } from '../../api'\nimport { Line, Bar } from 'react-chartjs-2'\nimport styles from './Chart.module.css'\nconst Chart = ({ data, country }) => {\n    const [dailyData, setDailyData] = useState([]);\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData())\n        }\n        fetchAPI()\n    }, [setDailyData])\n\n    const lineChart = (\n        dailyData.length ? (<Line data={{\n            labels: dailyData.map((item) => item.date),\n            datasets: [{\n                data: dailyData.map((item) => item.confirmed),\n                label: 'Infected',\n                borderColor: '#3333ff',\n                fill: true,\n\n            }, {\n                data: dailyData.map((item) => item.deaths),\n                label: 'Infected',\n                borderColor: 'red',\n                backgroundColor: 'rgba(255,0,0,0.5)',\n                fill: true,\n            }]\n        }} />) : null\n    )\n\n    const barChart = (\n        data.confirmed ? \n        (<Bar \n        data={{\n            labels:['Infected','Recovered','Deaths'],\n            datasets: [{\n                label:'People',\n                backgroundColor: [\n                    'rgba(0,0,255,0.5)',\n                    'rgba(0,255,0,0.5)',\n                    'rgba(255,0,0,0.5)'\n                ],\n                data:[data.confirmed,data.recovered,data.deaths]\n            }]\n        }}\n        options={{\n            legend: {display:false},\n            title:{display:true,text: 'Current State in' + country}\n        }}\n        /> ): null\n    )\n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Charts"]},"metadata":{},"sourceType":"module"}